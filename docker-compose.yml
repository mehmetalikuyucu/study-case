version: '3.7'
services:
  client:
    image: node:lts
    working_dir: /app
    volumes:
      - ./client:/app
      - ./client/node_modules:/app/node_modules
    ports:
      - "3000:3000"
    command: >
      sh -c "npm install && npm run start"
    depends_on:
      - server
    networks:
      - network
  server:
    image: node:lts
    working_dir: /app
    volumes:
      - ./server:/app
      - ./server/node_modules:/app/node_modules
    ports:
      - "3003:3000"
    command: >
      sh -c "npm install -g @nestjs/cli && npm install && npm run start:dev"
    depends_on:
      - db
    networks:
      - network
  db:
    image: mongo
    container_name: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: bolt
      MONGO_INITDB_ROOT_PASSWORD: bolt
      MONGO_INITDB_DATABASE: chatbot

    ports:
      - "27017:27017"
    volumes:
      - db-data:/data/db
      - ./init-db.js:/docker-entrypoint-initdb.d/init-db.js
    networks:
      - network

  mongo-express:
    image: mongo-express
    links:
      - db
    ports:
      - 8081:8081
    healthcheck:
      test:  ["CMD", "docker-healthcheck"]
      interval: 150s
      timeout: 2s
      retries: 10
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: bolt  
      ME_CONFIG_MONGODB_ADMINPASSWORD: bolt
      ME_CONFIG_BASICAUTH_USERNAME: bolt
      ME_CONFIG_BASICAUTH_PASSWORD: bolt
      ME_CONFIG_MONGODB_SERVER: db
      ME_CONFIG_BASICAUTH: true
    depends_on:
      - db
    networks:
      - network

volumes:
  db-data:
  pgadmin-data:
  node_modules:

networks:
  network: